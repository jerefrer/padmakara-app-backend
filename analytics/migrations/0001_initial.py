# Generated by Django 5.2.4 on 2025-07-23 08:09

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('retreats', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyUsageStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True, verbose_name='Date')),
                ('total_users', models.PositiveIntegerField(default=0, verbose_name='Total Users')),
                ('active_users', models.PositiveIntegerField(default=0, verbose_name='Active Users')),
                ('new_users', models.PositiveIntegerField(default=0, verbose_name='New Users')),
                ('tracks_played', models.PositiveIntegerField(default=0, verbose_name='Tracks Played')),
                ('total_listening_time', models.PositiveIntegerField(default=0, verbose_name='Total Listening Time (minutes)')),
                ('pdfs_opened', models.PositiveIntegerField(default=0, verbose_name='PDFs Opened')),
                ('bookmarks_created', models.PositiveIntegerField(default=0, verbose_name='Bookmarks Created')),
                ('highlights_created', models.PositiveIntegerField(default=0, verbose_name='Highlights Created')),
                ('downloads_requested', models.PositiveIntegerField(default=0, verbose_name='Downloads Requested')),
                ('ios_sessions', models.PositiveIntegerField(default=0, verbose_name='iOS Sessions')),
                ('android_sessions', models.PositiveIntegerField(default=0, verbose_name='Android Sessions')),
                ('web_sessions', models.PositiveIntegerField(default=0, verbose_name='Web Sessions')),
                ('average_session_duration', models.PositiveIntegerField(default=0, verbose_name='Average Session Duration (minutes)')),
                ('completion_rate', models.FloatField(default=0.0, verbose_name='Completion Rate (%)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Daily Usage Stats',
                'verbose_name_plural': 'Daily Usage Stats',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='SystemHealth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('average_response_time', models.FloatField(default=0.0, verbose_name='Average Response Time (ms)')),
                ('error_rate', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Error Rate (%)')),
                ('uptime_percentage', models.FloatField(default=100.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Uptime Percentage')),
                ('cpu_usage', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='CPU Usage (%)')),
                ('memory_usage', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Memory Usage (%)')),
                ('disk_usage', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Disk Usage (%)')),
                ('database_connections', models.PositiveIntegerField(default=0, verbose_name='Database Connections')),
                ('slow_queries_count', models.PositiveIntegerField(default=0, verbose_name='Slow Queries Count')),
                ('database_size_mb', models.FloatField(default=0.0, verbose_name='Database Size (MB)')),
                ('total_storage_used', models.PositiveBigIntegerField(default=0, verbose_name='Total Storage Used (bytes)')),
                ('audio_files_count', models.PositiveIntegerField(default=0, verbose_name='Audio Files Count')),
                ('transcript_files_count', models.PositiveIntegerField(default=0, verbose_name='Transcript Files Count')),
                ('api_requests_count', models.PositiveIntegerField(default=0, verbose_name='API Requests Count')),
                ('api_errors_count', models.PositiveIntegerField(default=0, verbose_name='API Errors Count')),
            ],
            options={
                'verbose_name': 'System Health',
                'verbose_name_plural': 'System Health',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PopularContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_plays', models.PositiveIntegerField(default=0, verbose_name='Total Plays')),
                ('unique_listeners', models.PositiveIntegerField(default=0, verbose_name='Unique Listeners')),
                ('completion_rate', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Completion Rate (%)')),
                ('average_listening_time', models.PositiveIntegerField(default=0, verbose_name='Average Listening Time (minutes)')),
                ('bookmarks_count', models.PositiveIntegerField(default=0, verbose_name='Bookmarks Count')),
                ('highlights_count', models.PositiveIntegerField(default=0, verbose_name='Highlights Count')),
                ('downloads_count', models.PositiveIntegerField(default=0, verbose_name='Downloads Count')),
                ('notes_count', models.PositiveIntegerField(default=0, verbose_name='Notes Count')),
                ('average_rating', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='Average Rating')),
                ('total_ratings', models.PositiveIntegerField(default=0, verbose_name='Total Ratings')),
                ('last_played', models.DateTimeField(blank=True, null=True, verbose_name='Last Played')),
                ('trending_score', models.FloatField(default=0.0, verbose_name='Trending Score')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('track', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='popularity_stats', to='retreats.track', verbose_name='Track')),
            ],
            options={
                'verbose_name': 'Popular Content',
                'verbose_name_plural': 'Popular Content',
                'ordering': ['-trending_score', '-total_plays'],
            },
        ),
        migrations.CreateModel(
            name='UserEngagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_sessions', models.PositiveIntegerField(default=0, verbose_name='Total Sessions')),
                ('total_listening_time', models.PositiveIntegerField(default=0, verbose_name='Total Listening Time (minutes)')),
                ('average_session_duration', models.PositiveIntegerField(default=0, verbose_name='Average Session Duration (minutes)')),
                ('tracks_started', models.PositiveIntegerField(default=0, verbose_name='Tracks Started')),
                ('tracks_completed', models.PositiveIntegerField(default=0, verbose_name='Tracks Completed')),
                ('bookmarks_created', models.PositiveIntegerField(default=0, verbose_name='Bookmarks Created')),
                ('highlights_created', models.PositiveIntegerField(default=0, verbose_name='Highlights Created')),
                ('notes_created', models.PositiveIntegerField(default=0, verbose_name='Notes Created')),
                ('engagement_score', models.FloatField(default=0.0, verbose_name='Engagement Score')),
                ('last_active_date', models.DateField(blank=True, null=True, verbose_name='Last Active Date')),
                ('current_streak', models.PositiveIntegerField(default=0, verbose_name='Current Streak (days)')),
                ('longest_streak', models.PositiveIntegerField(default=0, verbose_name='Longest Streak (days)')),
                ('preferred_session_length', models.PositiveIntegerField(default=30, verbose_name='Preferred Session Length (minutes)')),
                ('most_active_hour', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23)], verbose_name='Most Active Hour')),
                ('preferred_content_type', models.CharField(blank=True, max_length=50, verbose_name='Preferred Content Type')),
                ('retreats_joined', models.PositiveIntegerField(default=0, verbose_name='Retreats Joined')),
                ('retreats_completed', models.PositiveIntegerField(default=0, verbose_name='Retreats Completed')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='engagement_stats', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Engagement',
                'verbose_name_plural': 'User Engagement',
                'ordering': ['-engagement_score'],
            },
        ),
        migrations.CreateModel(
            name='ContentRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation_type', models.CharField(choices=[('popular', 'Popular Content'), ('similar', 'Similar Content'), ('continue', 'Continue Listening'), ('new', 'New Content'), ('curated', 'Curated by Teacher'), ('trending', 'Trending'), ('based_on_history', 'Based on Your History')], max_length=20, verbose_name='Recommendation Type')),
                ('score', models.FloatField(default=0.0, verbose_name='Recommendation Score')),
                ('reason', models.TextField(blank=True, verbose_name='Recommendation Reason')),
                ('shown_at', models.DateTimeField(blank=True, null=True, verbose_name='Shown At')),
                ('clicked_at', models.DateTimeField(blank=True, null=True, verbose_name='Clicked At')),
                ('is_dismissed', models.BooleanField(default=False, verbose_name='Is Dismissed')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expires At')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='retreats.track')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Content Recommendation',
                'verbose_name_plural': 'Content Recommendations',
                'ordering': ['-score', '-created_at'],
                'unique_together': {('user', 'track', 'recommendation_type')},
            },
        ),
    ]
