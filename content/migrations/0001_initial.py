# Generated by Django 5.2.4 on 2025-07-23 08:09

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('retreats', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_seconds', models.PositiveIntegerField(verbose_name='Position (seconds)')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Bookmark Title')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to='retreats.track')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bookmark',
                'verbose_name_plural': 'Bookmarks',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', '-created_at'], name='content_boo_user_id_d98877_idx'), models.Index(fields=['track', 'position_seconds'], name='content_boo_track_i_ec0ac1_idx')],
            },
        ),
        migrations.CreateModel(
            name='DownloadedContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('audio', 'Audio Only'), ('transcript', 'Transcript Only'), ('both', 'Audio + Transcript')], max_length=20, verbose_name='Content Type')),
                ('status', models.CharField(choices=[('requested', 'Requested'), ('downloading', 'Downloading'), ('completed', 'Completed'), ('failed', 'Failed'), ('expired', 'Expired')], default='requested', max_length=20, verbose_name='Status')),
                ('file_size', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='File Size (bytes)')),
                ('local_path', models.CharField(blank=True, max_length=500, verbose_name='Local Path')),
                ('download_url', models.URLField(blank=True, verbose_name='Download URL')),
                ('requested_at', models.DateTimeField(auto_now_add=True, verbose_name='Requested At')),
                ('downloaded_at', models.DateTimeField(blank=True, null=True, verbose_name='Downloaded At')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expires At')),
                ('last_accessed', models.DateTimeField(blank=True, null=True, verbose_name='Last Accessed')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to='retreats.track')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Downloaded Content',
                'verbose_name_plural': 'Downloaded Content',
                'ordering': ['-requested_at'],
                'unique_together': {('user', 'track', 'content_type')},
            },
        ),
        migrations.CreateModel(
            name='PDFHighlight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_number', models.PositiveIntegerField(verbose_name='Page Number')),
                ('highlighted_text', models.TextField(verbose_name='Highlighted Text')),
                ('color', models.CharField(choices=[('yellow', 'Yellow'), ('green', 'Green'), ('blue', 'Blue'), ('pink', 'Pink'), ('orange', 'Orange')], default='yellow', max_length=10, verbose_name='Highlight Color')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('start_position', models.JSONField(blank=True, default=dict, verbose_name='Start Position')),
                ('end_position', models.JSONField(blank=True, default=dict, verbose_name='End Position')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdf_highlights', to='retreats.track')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdf_highlights', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'PDF Highlight',
                'verbose_name_plural': 'PDF Highlights',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', '-created_at'], name='content_pdf_user_id_7887dc_idx'), models.Index(fields=['track', 'page_number'], name='content_pdf_track_i_867325_idx')],
            },
        ),
        migrations.CreateModel(
            name='PDFProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_page', models.PositiveIntegerField(default=1, verbose_name='Current Page')),
                ('total_pages', models.PositiveIntegerField(default=1, verbose_name='Total Pages')),
                ('completion_percentage', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Completion Percentage')),
                ('last_accessed', models.DateTimeField(auto_now=True, verbose_name='Last Accessed')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdf_progress', to='retreats.track')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdf_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'PDF Progress',
                'verbose_name_plural': 'PDF Progress',
                'unique_together': {('user', 'track')},
            },
        ),
        migrations.CreateModel(
            name='UserNotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_type', models.CharField(choices=[('track', 'Track Note'), ('retreat', 'Retreat Note'), ('general', 'General Note')], default='general', max_length=20, verbose_name='Note Type')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Title')),
                ('content', models.TextField(verbose_name='Content')),
                ('is_private', models.BooleanField(default=True, verbose_name='Is Private')),
                ('tags', models.JSONField(blank=True, default=list, verbose_name='Tags')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('retreat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_notes', to='retreats.retreat')),
                ('track', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_notes', to='retreats.track')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Note',
                'verbose_name_plural': 'User Notes',
                'ordering': ['-updated_at'],
                'indexes': [models.Index(fields=['user', '-updated_at'], name='content_use_user_id_05e4df_idx'), models.Index(fields=['note_type', '-created_at'], name='content_use_note_ty_fe6477_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_position', models.PositiveIntegerField(default=0, verbose_name='Current Position (seconds)')),
                ('completion_percentage', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Completion Percentage')),
                ('play_count', models.PositiveIntegerField(default=0, verbose_name='Play Count')),
                ('total_listening_time', models.PositiveIntegerField(default=0, verbose_name='Total Listening Time (seconds)')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Is Completed')),
                ('is_favorited', models.BooleanField(default=False, verbose_name='Is Favorited')),
                ('first_played', models.DateTimeField(auto_now_add=True, verbose_name='First Played')),
                ('last_played', models.DateTimeField(auto_now=True, verbose_name='Last Played')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to='retreats.track')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Progress',
                'verbose_name_plural': 'User Progress',
                'indexes': [models.Index(fields=['user', '-last_played'], name='content_use_user_id_055faf_idx'), models.Index(fields=['track', '-completion_percentage'], name='content_use_track_i_f78ce3_idx')],
                'unique_together': {('user', 'track')},
            },
        ),
    ]
