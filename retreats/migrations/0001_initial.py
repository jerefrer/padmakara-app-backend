# Generated by Django 5.2.4 on 2025-07-23 08:09

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RetreatGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Group Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('teacher', models.CharField(blank=True, max_length=100, verbose_name='Main Teacher')),
                ('tradition', models.CharField(blank=True, max_length=100, verbose_name='Buddhist Tradition')),
                ('website', models.URLField(blank=True, verbose_name='Website')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Contact Email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Phone')),
                ('location', models.CharField(blank=True, max_length=200, verbose_name='Location')),
                ('address', models.TextField(blank=True, verbose_name='Address')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('is_public', models.BooleanField(default=True, help_text='Public groups are visible to all users', verbose_name='Is Public')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='group_logos/', verbose_name='Logo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Retreat Group',
                'verbose_name_plural': 'Retreat Groups',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Retreat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Retreat Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('start_date', models.DateTimeField(verbose_name='Start Date')),
                ('end_date', models.DateTimeField(verbose_name='End Date')),
                ('registration_deadline', models.DateTimeField(blank=True, null=True, verbose_name='Registration Deadline')),
                ('retreat_type', models.CharField(choices=[('online', 'Online'), ('in_person', 'In Person'), ('hybrid', 'Hybrid')], default='online', max_length=20, verbose_name='Type')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('upcoming', 'Upcoming'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20, verbose_name='Status')),
                ('max_participants', models.PositiveIntegerField(blank=True, null=True, verbose_name='Maximum Participants')),
                ('is_public', models.BooleanField(default=True, verbose_name='Is Public')),
                ('requires_approval', models.BooleanField(default=False, verbose_name='Requires Approval')),
                ('is_free', models.BooleanField(default=True, verbose_name='Is Free')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Price')),
                ('currency', models.CharField(default='EUR', max_length=3, verbose_name='Currency')),
                ('location', models.CharField(blank=True, max_length=200, verbose_name='Location')),
                ('address', models.TextField(blank=True, verbose_name='Address')),
                ('image', models.ImageField(blank=True, null=True, upload_to='retreat_images/', verbose_name='Retreat Image')),
                ('prerequisites', models.TextField(blank=True, help_text='Any requirements or recommendations for participants', verbose_name='Prerequisites')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retreats', to='retreats.retreatgroup')),
            ],
            options={
                'verbose_name': 'Retreat',
                'verbose_name_plural': 'Retreats',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Session Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('session_date', models.DateTimeField(verbose_name='Session Date')),
                ('duration_minutes', models.PositiveIntegerField(default=60, verbose_name='Duration (minutes)')),
                ('session_number', models.PositiveIntegerField(default=1, verbose_name='Session Number')),
                ('is_live', models.BooleanField(default=False, help_text='Whether this is a live or pre-recorded session', verbose_name='Is Live Session')),
                ('is_optional', models.BooleanField(default=False, verbose_name='Is Optional')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('retreat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='retreats.retreat')),
            ],
            options={
                'verbose_name': 'Session',
                'verbose_name_plural': 'Sessions',
                'ordering': ['retreat', 'session_number'],
                'unique_together': {('retreat', 'session_number')},
            },
        ),
        migrations.CreateModel(
            name='RetreatParticipation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('requested', 'Requested'), ('registered', 'Registered'), ('confirmed', 'Confirmed'), ('attended', 'Attended'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='requested', max_length=20, verbose_name='Status')),
                ('registration_date', models.DateTimeField(auto_now_add=True, verbose_name='Registration Date')),
                ('confirmation_date', models.DateTimeField(blank=True, null=True, verbose_name='Confirmation Date')),
                ('completion_date', models.DateTimeField(blank=True, null=True, verbose_name='Completion Date')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Rating')),
                ('feedback', models.TextField(blank=True, verbose_name='Feedback')),
                ('sessions_attended', models.PositiveIntegerField(default=0, verbose_name='Sessions Attended')),
                ('completion_percentage', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Completion Percentage')),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('refunded', 'Refunded'), ('waived', 'Waived')], default='pending', max_length=20, verbose_name='Payment Status')),
                ('payment_date', models.DateTimeField(blank=True, null=True, verbose_name='Payment Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('retreat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='retreats.retreat')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retreat_participations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Retreat Participation',
                'verbose_name_plural': 'Retreat Participations',
                'ordering': ['-registration_date'],
                'unique_together': {('user', 'retreat')},
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Track Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('content_type', models.CharField(choices=[('teaching', 'Teaching'), ('meditation', 'Meditation'), ('qa', 'Q&A'), ('discussion', 'Discussion'), ('ritual', 'Ritual'), ('other', 'Other')], default='teaching', max_length=20, verbose_name='Content Type')),
                ('language', models.CharField(choices=[('en', 'English'), ('pt', 'PortuguÃªs')], default='en', max_length=5, verbose_name='Language')),
                ('audio_file', models.FileField(blank=True, null=True, upload_to='tracks/audio/', verbose_name='Audio File')),
                ('transcript_file', models.FileField(blank=True, null=True, upload_to='tracks/transcripts/', verbose_name='Transcript (PDF)')),
                ('duration_minutes', models.PositiveIntegerField(default=0, verbose_name='Duration (minutes)')),
                ('track_number', models.PositiveIntegerField(default=1, verbose_name='Track Number')),
                ('file_size', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='File Size (bytes)')),
                ('is_downloadable', models.BooleanField(default=True, verbose_name='Is Downloadable')),
                ('is_public', models.BooleanField(default=False, help_text='Public tracks can be accessed without retreat registration', verbose_name='Is Public')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracks', to='retreats.session')),
            ],
            options={
                'verbose_name': 'Track',
                'verbose_name_plural': 'Tracks',
                'ordering': ['session', 'track_number'],
                'unique_together': {('session', 'track_number')},
            },
        ),
    ]
