# Generated by Django 5.2.4 on 2025-08-09 07:43

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0004_remove_user_avatar_remove_user_bio_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceActivation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('device_fingerprint', models.CharField(max_length=255, unique=True, verbose_name='Device Fingerprint')),
                ('device_name', models.CharField(blank=True, max_length=100, verbose_name='Device Name')),
                ('device_type', models.CharField(blank=True, max_length=50, verbose_name='Device Type')),
                ('activated_at', models.DateTimeField(auto_now_add=True, verbose_name='Activated At')),
                ('last_used', models.DateTimeField(auto_now=True, verbose_name='Last Used')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_activations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Device Activation',
                'verbose_name_plural': 'Device Activations',
                'ordering': ['-activated_at'],
                'indexes': [models.Index(fields=['user', '-activated_at'], name='accounts_de_user_id_df7631_idx'), models.Index(fields=['device_fingerprint'], name='accounts_de_device__f576a6_idx')],
            },
        ),
        migrations.CreateModel(
            name='MagicLinkToken',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=64, unique=True, verbose_name='Token')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('device_fingerprint', models.CharField(max_length=255, verbose_name='Device Fingerprint')),
                ('device_name', models.CharField(blank=True, max_length=100, verbose_name='Device Name')),
                ('device_type', models.CharField(blank=True, max_length=50, verbose_name='Device Type')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('expires_at', models.DateTimeField(verbose_name='Expires At')),
                ('used_at', models.DateTimeField(blank=True, null=True, verbose_name='Used At')),
                ('is_used', models.BooleanField(default=False, verbose_name='Is Used')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='magic_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Magic Link Token',
                'verbose_name_plural': 'Magic Link Tokens',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['token'], name='accounts_ma_token_c6333c_idx'), models.Index(fields=['user', '-created_at'], name='accounts_ma_user_id_80a0a0_idx'), models.Index(fields=['expires_at'], name='accounts_ma_expires_e8d6cd_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserApprovalRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('first_name', models.CharField(max_length=30, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=30, verbose_name='Last Name')),
                ('message', models.TextField(blank=True, verbose_name='Message to Admin')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20, verbose_name='Status')),
                ('admin_message', models.TextField(blank=True, help_text='Optional message to send to user upon rejection', verbose_name='Admin Message')),
                ('requested_at', models.DateTimeField(auto_now_add=True, verbose_name='Requested At')),
                ('reviewed_at', models.DateTimeField(blank=True, null=True, verbose_name='Reviewed At')),
                ('device_fingerprint', models.CharField(blank=True, max_length=255, verbose_name='Device Fingerprint')),
                ('device_name', models.CharField(blank=True, max_length=100, verbose_name='Device Name')),
                ('device_type', models.CharField(blank=True, max_length=50, verbose_name='Device Type')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Approval Request',
                'verbose_name_plural': 'User Approval Requests',
                'ordering': ['-requested_at'],
                'indexes': [models.Index(fields=['status', '-requested_at'], name='accounts_us_status_dd05ca_idx'), models.Index(fields=['email'], name='accounts_us_email_66f6d8_idx')],
            },
        ),
    ]
